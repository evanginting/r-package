#      plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
# # Create a plot by summarising attendance number into yearly basis
attendance %>%
filter(week == 1) %>%
group_by(year) %>%
summarise(total = sum(total),
home = sum(home)) %>%
ggplot(aes(x = year, y = total, group = 1)) +
geom_line(size = 1) +
geom_point(size = 3) +
theme_classic() +
scale_y_continuous(labels = scales::comma)
# Create a plot by summarising attendance number into yearly basis
attendance %>%
filter(week == 1) %>%
group_by(year) %>%
summarise(total = sum(total),
home = sum(home)) %>%
ggplot(aes(x = year, y = total, group = 1)) +
geom_line(size = 1) +
geom_point(size = 3) +
theme_classic() +
scale_y_continuous(labels = scales::comma)
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
library(nflexplore)
library(dplyr)
library(ggplot2)
library(tidyr)
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number))
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
ggplot(aes(x = fct_reorder(home_team, total_win), y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
geom_text(aes(label = total_win, x = home_team, y = total_win),
position = position_dodge(width = 0.9),
vjust = 0.5,
hjust = 1.25,
size = 4) +
ggtitle(label = "Top 5 Team with Total Win Records",
subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face = "bold"),
plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number))
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
ggplot(aes(x = home_team, total_win, y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
geom_text(aes(label = total_win, x = home_team, y = total_win),
position = position_dodge(width = 0.9),
vjust = 0.5,
hjust = 1.25,
size = 4) +
ggtitle(label = "Top 5 Team with Total Win Records",
subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face = "bold"),
plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number)) %>%
arrange(-total_win)
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
ggplot(aes(x = home_team, total_win, y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
geom_text(aes(label = total_win, x = home_team, y = total_win),
position = position_dodge(width = 0.9),
vjust = 0.5,
hjust = 1.25,
size = 4) +
ggtitle(label = "Top 5 Team with Total Win Records",
subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face = "bold"),
plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number)) %>%
arrange(total_win)
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
ggplot(aes(x = home_team, total_win, y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
geom_text(aes(label = total_win, x = home_team, y = total_win),
position = position_dodge(width = 0.9),
vjust = 0.5,
hjust = 1.25,
size = 4) +
ggtitle(label = "Top 5 Team with Total Win Records",
subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face = "bold"),
plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number))
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
arrange(total_win) %>%
ggplot(aes(x = home_team, y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
geom_text(aes(label = total_win, x = home_team, y = total_win),
position = position_dodge(width = 0.9),
vjust = 0.5,
hjust = 1.25,
size = 4) +
ggtitle(label = "Top 5 Team with Total Win Records",
subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face = "bold"),
plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number))
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
arrange(-total_win) %>%
ggplot(aes(x = home_team, y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
geom_text(aes(label = total_win, x = home_team, y = total_win),
position = position_dodge(width = 0.9),
vjust = 0.5,
hjust = 1.25,
size = 4) +
ggtitle(label = "Top 5 Team with Total Win Records",
subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face = "bold"),
plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
?reorder
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number))
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
ggplot(aes(x = reorder(home_team, total_win), y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
geom_text(aes(label = total_win, x = home_team, y = total_win),
position = position_dodge(width = 0.9),
vjust = 0.5,
hjust = 1.25,
size = 4) +
ggtitle(label = "Top 5 Team with Total Win Records",
subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face = "bold"),
plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number))
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
ggplot(aes(x = reorder(home_team, total_win), y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
#geom_text(aes(label = total_win, x = home_team, y = total_win),
#              position = position_dodge(width = 0.9),
#              vjust = 0.5,
#              hjust = 1.25,
#              size = 4) +
#ggtitle(label = "Top 5 Team with Total Win Records",
#              subtitle = "Data Period: 2000 - 2019") +
#xlab("Team") +
#ylab("Number of Win") +
theme_classic()
#theme(plot.title = element_text(hjust=0.5, face = "bold"),
#      plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number))
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
ggplot(aes(x = reorder(home_team, total_win), y = total_win)) +
geom_bar(position = "dodge", stat = "identity", fill = "skyblue") +
coord_flip() +
#geom_text(aes(label = total_win, x = home_team, y = total_win),
#              position = position_dodge(width = 0.9),
#              vjust = 0.5,
#              hjust = 1.25,
#              size = 4) +
#ggtitle(label = "Top 5 Team with Total Win Records",
#              subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic()
#theme(plot.title = element_text(hjust=0.5, face = "bold"),
#      plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
#Creating home/away win table
home_away <- games %>%
group_by(year, home_team) %>%
summarise(home = sum(home_win),
away = sum(away_win)) %>%
pivot_longer(c("home","away"),
names_to = "home_aways",
values_to = "win_number")
#Summarising home/away win table
home_away_summ <- home_away %>%
group_by(home_team) %>%
summarise(total_win = sum(win_number))
#Plotting for Home & Away Win
home_away_summ %>%
slice_max(total_win, n = 5) %>%
ggplot(aes(x = reorder(home_team, total_win), y = total_win)) +
geom_bar(position = "dodge", stat = "identity") +
coord_flip() +
#geom_text(aes(label = total_win, x = home_team, y = total_win),
#              position = position_dodge(width = 0.9),
#              vjust = 0.5,
#              hjust = 1.25,
#              size = 4) +
#ggtitle(label = "Top 5 Team with Total Win Records",
#              subtitle = "Data Period: 2000 - 2019") +
xlab("Team") +
ylab("Number of Win") +
theme_classic()
#theme(plot.title = element_text(hjust=0.5, face = "bold"),
#      plot.subtitle = element_text(hjust=0.5, face = "italic", size = 10))
?attendance
?nflexplore
use_package_doc()
library(usethis)
usethis::use_package_doc()
?nflexplore
?nflexplore
??nflexplore
devtools::document
?nflexplore
devtools::load_all()
?nflexplore
library(nflexplore)
library(dplyr)
library(ggplot2)
library(tidyr)
win_trend("Arizona Cardinals")
win_trend("Dallas Cowboys")
numeric_data <- c(10, 15, 20, 25, 30, 35)
category_data <- c("A", "B", "A", "B", "A", "B")
calculate_means(numeric_data, category_data)
devtools::load_all()
devtools::check()
?aes
devtools::load_all()
devtools::check()
usethis::use_readme_rmd()
devtools::build_readme()
rlang::last_trace()
devtools::load_all()
devtools::check()
usethis::use_readme_md()
usethis::use_package("depends-scales")
usethis::use_package("scales")
devtools::load_all()
devtools::check()
devtools::install()
?calculate_means
pkgdown::build_site()
file.remove(".git/hooks/pre-commit")
attendance %>%
filter(week == 1) %>%
group_by(year) %>%
summarise(total = sum(total))
devtolls::load_all()
devtools::load_all()
attendance %>%
filter(week == 1) %>%
group_by(year) %>%
summarise(total = sum(total))
library(nflexplore)
library(dplyr)
attendance %>%
filter(week == 1) %>%
group_by(year) %>%
summarise(total = sum(total))
devtools::load_all()
devtools::check()
devtools::install()
pkgdown::build_site()
?calculate_means
?win_trend
?run_app
?attendance
?games
devtools::load_all()
devtools::check()
devtools::install()
pkgdown::build_site()
?attendance
?games
?run_app
?win_trend
?calculate_means
devtools::load_all()
devtools::check()
pkgdown::build_site()
devtools::load_all()
devtools::check()
?nflexplore
?nycflights13
??nflexplore
?attendance
?games
?run_app
?win_trend
?calculate_means
devtools::load_all()
devtools::check()
?win_trend
devtools::install()
pkgdown::build_site()
devtools::load_all()
devtools::check()
?nflexplore
?attendance
?games
?win_trend
?run_app
?calculate_means
devtools::load_all()
devtools::check()
?nflexplore
?attendance
?games
?win_trend
?run_app
?calculate_means
devtools::install()
pkgdown::build_site()
run_app()
?win_trend("Arizona Cardinals")
win_trend("Arizona Cardinals")
library(nflexplore)
win_trend("Arizona Cardinals")
view(attendance)
View(attendance)
View(games)
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
?win_trend
library(nflexplore)
?win_trend
?run_app
?calculate_means
?attendance
attendance_url <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-04/attendance.csv'
games_url <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-04/games.csv'
attendance <- readr::read_csv(attendance_url) %>%
dplyr::mutate(full_name = paste(team, team_name, sep = " "))
devtools::load_all()
devtools::check()
devtools::install()
pkgdown::build_site()
library(nflexplore)
View(attendance)
View(games)
?`nflexplore-package`
??nflexplore
library(dplyr)
??dplyr
??nflexplore
??nflexplore
??dplyr
?win_trend
?filter
?dplyr
?win_trend
?calculate_means
?win_trend
devtools::load_all()
devtools::check()
devtools::check()
?win_trend
devtools::install()
pkgdown::build_site()
library(nflexplore)
?win_trend
?run_app
?calculate_means
??nflexplore
browseVignettes("nflexplore")
?run_app
devtools::load_all()
devtools::check()
?run_app
devtools::install()
pkgdown::build_site()
library(nflexplore)
?run_app
library(scheduleR)
